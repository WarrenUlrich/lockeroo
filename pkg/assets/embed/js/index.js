"use strict";function navigate(t,n){t&&t.preventDefault(),document.querySelectorAll(".page-section").forEach(o=>{o.style.display="none"});const e=document.getElementById(n);e&&(e.style.display="block"),history.replaceState(null,"","#"+n)}async function submitLogin(t,n){try{const e=await fetch("/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:t,password:n})});if(!e.ok){const o=await e.json();return console.error("Login failed:",o.error),!1}return console.log("Login successful"),!0}catch(e){return console.error("Error during login:",e),!1}}async function submitRegister(t,n,e){try{const o=await fetch("/auth/signup",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,username:n,password:e})});if(!o.ok){const s=await o.json();return console.error("Registration failed:",s.error),!1}return console.log("Registration successful"),!0}catch(o){return console.error("Error during registration:",o),!1}}async function logout(){try{(await fetch("/auth/logout",{method:"POST"})).ok?(console.log("Logged out successfully"),navigate(null,"login"),await updateNavButtons()):console.error("Logout failed")}catch(t){console.error("Error during logout:",t)}}async function checkAuthentication(){try{const t=await fetch("/auth/status",{method:"GET",credentials:"include"});return t.ok?(await t.json()).authenticated:!1}catch(t){return console.error("Error checking authentication status:",t),!1}}async function updateNavButtons(){const t=await checkAuthentication(),n=document.querySelector(".nav-button"),e=document.querySelector(".sign-up");t?(n.textContent="Account",n.onclick=()=>navigate(null,"account"),e.textContent="Logout",e.onclick=()=>logout()):(n.textContent="Login",n.onclick=()=>navigate(null,"login"),e.textContent="Sign Up",e.onclick=()=>navigate(null,"signup"))}window.addEventListener("load",async()=>{const t=window.location.hash.substring(1)||"home";navigate(null,t);const n=document.getElementById("login-form"),e=document.getElementById("signup-form");n?.addEventListener("submit",async function(o){o.preventDefault();const s=o.target,r=new FormData(s),a=r.get("username"),i=r.get("password");if(!await submitLogin(a,i)){console.log("Login failed");return}await updateNavButtons(),navigate(null,"account")}),e?.addEventListener("submit",async function(o){o.preventDefault();const s=o.target,r=new FormData(s),a=r.get("email"),i=r.get("new-username"),c=r.get("new-password");if(!submitRegister(a,i,c)){console.log("Registration failed");return}navigate(null,"login")}),await updateNavButtons()}),window.addEventListener("popstate",()=>{const t=window.location.hash.substring(1)||"home";navigate(null,t)}),window.navigate=navigate;
